/****************************************************************************
**
** Copyright (C) 2016 The Qt Company Ltd.
** Contact: https://www.qt.io/licensing/
**
** This file is part of the Qt Charts module of the Qt Toolkit.
**
** $QT_BEGIN_LICENSE:GPL$
** Commercial License Usage
** Licensees holding valid commercial Qt licenses may use this file in
** accordance with the commercial license agreement provided with the
** Software or, alternatively, in accordance with the terms contained in
** a written agreement between you and The Qt Company. For licensing terms
** and conditions see https://www.qt.io/terms-conditions. For further
** information use the contact form at https://www.qt.io/contact-us.
**
** GNU General Public License Usage
** Alternatively, this file may be used under the terms of the GNU
** General Public License version 3 or (at your option) any later version
** approved by the KDE Free Qt Foundation. The licenses are as published by
** the Free Software Foundation and appearing in the file LICENSE.GPL3
** included in the packaging of this file. Please review the following
** information to ensure the GNU General Public License requirements will
** be met: https://www.gnu.org/licenses/gpl-3.0.html.
**
** $QT_END_LICENSE$
**
****************************************************************************/

#ifndef DATASOURCE_H
#define DATASOURCE_H

#include <QtCore/QObject>
#include <QtCharts/QLineSeries>
#include <QQmlEngine>

#include "sqlmolenetmodel.h"

class QQmlEngine;

QT_CHARTS_USE_NAMESPACE

class DataSource : public QObject
{
    Q_OBJECT
//    Q_PROPERTY(QList<QVector<QPointF>> mData MEMBER m_data WRITE setmData NOTIFY mDataChanged)

public:
    explicit DataSource(QQmlEngine *appEngine, QObject *parent = 0);

















































































































































































































































































































































































































































































































































































































































    Q_INVOKABLE QList<QVector<QPointF> > getMdata() {return m_data; }

    void setmData(QList<QVector<QPointF>> mdata) { m_data = mdata; }



Q_SIGNALS:

public slots:
    void generateData(const QString &node_id, const QString &type);
    void update(QAbstractSeries *series, const QString &node_id, int seriesCount,const QString& type);
//   void setLineSeries(QtCharts::QLineSeries *lineSeries);
    void clearM_data();
    void clearMoleNetTable();
signals:
    void mDataChanged();
private:
    QQmlEngine *m_appEngine;
    QList<QVector<QPointF> > m_data;
    int m_index;
    int m_seriesCounter;
    SqlMoleNetModel *sqlMoleNetModel;
};

#endif // DATASOURCE_H
